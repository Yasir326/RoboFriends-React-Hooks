{"version":3,"sources":["state/constants.js","state/reducers.js","state/actions.js","components/Card.jsx","components/CardList.jsx","components/SearchBox.jsx","components/Scroll.jsx","components/Error.jsx","components/Header.jsx","App.jsx","index.js"],"names":["SEARCH_EVENT","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","initialStateSearch","searchField","initialStateRobots","isPending","robots","error","requestRobots","dispatch","a","type","axios","get","result","payload","data","Card","id","name","email","className","src","alt","CardList","useSelector","state","filter","robot","toLowerCase","includes","searchRobots","pending","console","log","map","SearchBox","searchChange","placeholder","onChange","scrollStyle","overflow","border","height","Scroll","props","style","children","Error","hasError","info","this","setState","Component","Header","App","stateProps","useDispatch","useEffect","e","target","value","rootReducer","createLogger","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAAaA,EAAe,eAEfC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAwB,wBCG/BC,EAAqB,CACzBC,YAAa,IAGTC,EAAqB,CACzBC,WAAW,EACXC,OAAQ,GACRC,MAAO,I,0DCJIC,EAAa,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DAC3BD,EAAS,CACPE,KAAMZ,IAFmB,kBAKJa,IAAMC,IAAI,wCALN,OAKnBC,EALmB,OAMzBL,EAAS,CAAEE,KAAMX,EAAwBe,QAASD,EAAOE,OANhC,gDAQzBP,EAAS,CAAEE,KAAMV,EAAuBc,QAAQ,EAAD,KARtB,yDAAH,sD,OCIXE,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACxB,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAG,+BAA0BJ,EAA1B,iBAA6CK,IAAI,UACzD,gCACE,6BAAKJ,IACL,4BAAIC,WC6BGI,EAjCE,WACf,IAAMlB,EAASmB,aAAY,SAACC,GAAD,OACzBA,EAAMlB,cAAcF,OAAOqB,QACzB,SAACC,GACC,OAAOA,EAAMT,KACVU,cACAC,SAASJ,EAAMK,aAAa5B,YAAY0B,iBAE7C,CACEtB,MAAOmB,EAAMlB,cAAcwB,aAOjC,OAFAC,QAAQC,IAAI,YAGV,gCACG5B,EAAO6B,KAAI,SAACP,GACX,OACE,cAAC,EAAD,CACEV,GAAIU,EAAMV,GACVC,KAAMS,EAAMT,KACZC,MAAOQ,EAAMR,OACRQ,EAAMV,OAPnB,QCLWkB,EAdG,SAAC,GAAkC,EAAhCjC,YAAiC,IAApBkC,EAAmB,EAAnBA,aAEhC,OADAJ,QAAQC,IAAI,aAEV,qBAAKb,UAAU,MAAf,SACE,uBACEA,UAAU,sCACVV,KAAK,SACL2B,YAAY,gBACZC,SAAUF,OCJZG,EAAc,CAClBC,SAAU,SACVC,OAAQ,kBACRC,OAAQ,SAGKC,EAVA,SAACC,GACd,OAAO,qBAAKC,MAAON,EAAZ,SAA0BK,EAAME,Y,gCCoB1BC,E,kDApBb,WAAYH,GAAQ,IAAD,8BACjB,cAAMA,IACDnB,MAAQ,CACXuB,UAAU,GAHK,E,qDAOnB,SAAkB1C,EAAO2C,GACvBC,KAAKC,SAAS,CAAEH,UAAU,M,oBAG5B,WACE,OAAOE,KAAKzB,MAAMuB,SAChB,8DAEAE,KAAKN,MAAME,a,GAhBGM,aCKLC,EALA,WAEb,OADArB,QAAQC,IAAI,UACL,oBAAIb,UAAU,KAAd,0BCwCMkC,G,YAhCH,WACV,IAAMC,EAAa/B,aAAY,SAACC,GAAD,MAAY,CACzCvB,YAAauB,EAAMK,aAAa5B,YAChCE,UAAWqB,EAAMlB,cAAcH,cAE3BI,EAAWgD,cAEjBC,qBAAU,WACRjD,EAASD,KACR,IAMH,OACE,sBAAKa,UAAU,SAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWgB,aAPQ,SAACsB,GPfI,IAAC5C,EOgB3BN,GPhB2BM,EOgBH4C,EAAEC,OAAOC,MPhBO,CAAElD,KAAMb,EAAciB,gBOuB3DyC,EAAWnD,UACV,oBAAIgB,UAAU,QAAd,wBAEA,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,aCzBNyC,GADSC,yBACKC,YAAgB,CAAEjC,aTMV,WAA8C,IAA7CL,EAA4C,uDAApCxB,EAAoB+D,EAAgB,uDAAP,GAChE,OAAQA,EAAOtD,MACb,KAAKb,EACH,OAAO,2BAAK4B,GAAZ,IAAmBvB,YAAa8D,EAAOlD,UACzC,QACE,OAAOW,ISXuClB,cTevB,WAA8C,IAA7CkB,EAA4C,uDAApCtB,EAAoB6D,EAAgB,uDAAP,GACjE,OAAQA,EAAOtD,MACb,KAAKZ,EACH,OAAO,2BAAK2B,GAAZ,IAAmBrB,WAAW,IAChC,KAAKL,EACH,OAAO,2BAAK0B,GAAZ,IAAmBpB,OAAQ2D,EAAOlD,QAASV,WAAW,IACtD,KAAKJ,EACH,OAAO,2BAAKyB,GAAZ,IAAmBnB,MAAO0D,EAAOlD,QAASV,WAAW,IACzD,QACE,OAAOqB,OSvBPwC,EAEAC,YAAYL,EAAaM,YAAgBC,MAG/CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,W","file":"static/js/main.9bf193de.chunk.js","sourcesContent":["export const SEARCH_EVENT = 'SEARCH_EVENT';\n\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';\n","import {\n  SEARCH_EVENT,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED,\n} from './constants';\n\nconst initialStateSearch = {\n  searchField: '',\n};\n\nconst initialStateRobots = {\n  isPending: false,\n  robots: [],\n  error: ''\n};\n\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\n  switch (action.type) {\n    case SEARCH_EVENT:\n      return { ...state, searchField: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return { ...state, isPending: true };\n    case REQUEST_ROBOTS_SUCCESS:\n      return { ...state, robots: action.payload, isPending: false };\n      case REQUEST_ROBOTS_FAILED:\n        return { ...state, error: action.payload, isPending: false };\n    default:\n      return state;\n  }\n};\n","import axios from 'axios';\nimport {\n  SEARCH_EVENT,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED,\n} from './constants';\n\nexport const setSearchField = (payload) => ({ type: SEARCH_EVENT, payload });\n\nexport const requestRobots = async (dispatch) => {\n  dispatch({\n    type: REQUEST_ROBOTS_PENDING,\n  });\n  try {\n    const result = await axios.get('//jsonplaceholder.typicode.com/users');\n    dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: result.data });\n  } catch (error) {\n    dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error });\n  }\n};\n","import React from 'react';\n\nconst Card = ({ id, name, email }) => {\n  return (\n    <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n      <img src={`https://robohash.org/${id}?size=200x200`} alt='robot' />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import { useSelector } from 'react-redux';\nimport React from 'react';\nimport Card from './Card';\n\nconst CardList = () => {\n  const robots = useSelector((state) =>\n    state.requestRobots.robots.filter(\n      (robot) => {\n        return robot.name\n          .toLowerCase()\n          .includes(state.searchRobots.searchField.toLowerCase());\n      },\n      {\n        error: state.requestRobots.pending,\n      }\n    )\n  );\n\n  console.log('cardlist')\n\n  return (\n    <div>\n      {robots.map((robot) => {\n        return (\n          <Card\n            id={robot.id}\n            name={robot.name}\n            email={robot.email}\n            key={robot.id}\n          />\n        );\n      })}\n      ;\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from 'react';\n\nconst SearchBox = ({ searchField, searchChange }) => {\n  console.log('searchbox')\n  return (\n    <div className='pa2'>\n      <input\n        className='pa3 ba b--green bg-lightest-blue tc'\n        type='search'\n        placeholder='Search Robots'\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from 'react';\n\nconst Scroll = (props) => {\n  return <div style={scrollStyle}>{props.children}</div>;\n};\n\nconst scrollStyle = {\n  overflow: 'scroll',\n  border: '5px solid black',\n  height: '800px',\n};\n\nexport default Scroll;\n","import React, { Component } from 'react';\n\nclass Error extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    return this.state.hasError ? (\n      <h1>Oopsie, something went wrong</h1>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\nexport default Error;\n","import React from 'react';\n\nconst Header = () => {\n  console.log('Header')\n  return <h1 className='f1'>RoboFriends</h1>;\n};\n\nexport default Header;\n","import { useEffect } from 'react';\nimport { setSearchField, requestRobots } from './state/actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport React from 'react';\nimport CardList from './components/CardList';\nimport SearchBox from './components/SearchBox';\nimport Scroll from './components/Scroll';\nimport Error from './components/Error';\nimport Header from './components/Header';\nimport 'tachyons';\nimport './styles/App.css';\n\nconst App = () => {\n  const stateProps = useSelector((state) => ({\n    searchField: state.searchRobots.searchField,\n    isPending: state.requestRobots.isPending,\n  }));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(requestRobots);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const onSearchChange = (e) => {\n    dispatch(setSearchField(e.target.value));\n  };\n\n  return (\n    <div className='App tc'>\n      <Header />\n      <SearchBox searchChange={onSearchChange} />\n      {stateProps.isPending ? (\n        <h1 className='f1 tc'>Loading...</h1>\n      ) : (\n        <Scroll>\n          <Error>\n            <CardList />\n          </Error>\n        </Scroll>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport { searchRobots, requestRobots } from './state/reducers';\nimport thunkMiddleware from 'redux-thunk';\nimport './styles/index.css';\nimport App from './App';\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({ searchRobots, requestRobots });\nconst store =\n  process.env.NODE_ENV === 'production'\n    ? createStore(rootReducer, applyMiddleware(thunkMiddleware))\n    : createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}